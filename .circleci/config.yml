version: 2.1

workflows:
  version: 2
  build:
   jobs:
    - build:
        filters:
          branches:
            only:
              - main
    - deploy:
        filters:
          branches:
            only:
              - main
        requires:
          - build

jobs:
  build:
    working_directory: ~/SimpleApplication
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json"}}
      - run:
          name: install-npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json"}}
          paths:
          - ./node_modules
      - run:
          name: docker-login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Publish Docker Image
          command: docker push $IMAGE_NAME
      - run:
          name: set-environment-variables
          command: echo $SERVER > server.crt && echo $PRIVATE_KEY > privatekey.pem
      - run:
          name: build-docker-image-for-integration-environment
          command: docker create -p 8443:8443 --name integration_app $IMAGE_NAME
      - run:
          name: copy-server-cert-and-private-key-accross
          command: docker cp ./privatekey.pem integration_app:/privatekey.pem; docker cp ./server.crt integration_app:/server.crt
      - run:
          name: start-docker-container
          command: docker start integration_app
      - run: 
          name: run-zap-scan-against-container
          command: CONTAINER_IP=$(docker inspect integration_app --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'); docker run -t owasp/zap2docker-stable zap-baseline.py -t https://$CONTAINER_IP:8443 -P 8443
  deploy:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - run:
          name: deploy-application
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export IMAGE_NAME=\"$IMAGE_NAME\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; rm -rf Simple-Application-Project/; git clone https://github.com/tabynci/Simple-Application-Project.git; source Simple-Application-Project/deploy.sh"